================================================================================
                    PRODUCTION DEPLOYMENT FIX - STEP BY STEP GUIDE
================================================================================

ISSUE: Netlify redirect points to placeholder URL instead of actual backend

CRITICAL: Your website will not work in production until this is fixed!

================================================================================
🚀 RECOMMENDED SOLUTION: Deploy Backend to Railway
================================================================================

STEP 1: Prepare Your Backend for Deployment
────────────────────────────────────────────────────────────────────────────────
1. Make sure your backend/.env file has all required variables:
   - SUPABASE_URL
   - SUPABASE_ANON_KEY
   - PORT (Railway will set this automatically)

2. Update backend/package.json to include start script:
   {
     "scripts": {
       "start": "node server.js"
     }
   }

STEP 2: Deploy to Railway
────────────────────────────────────────────────────────────────────────────────
1. Go to https://railway.app and sign up with GitHub
2. Click "New Project" → "Deploy from GitHub repo"
3. Select your EdenWebSite repository
4. Choose "backend" as the root directory
5. Add environment variables:
   - SUPABASE_URL = your_supabase_url
   - SUPABASE_ANON_KEY = your_supabase_key
   - NODE_ENV = production
6. Deploy and copy the generated URL (e.g., https://edenparfum-backend-xyz.railway.app)

STEP 3: Update netlify.toml
────────────────────────────────────────────────────────────────────────────────
Replace the placeholder URL with your Railway URL:

[[redirects]]
  from = "/api/*"
  to = "https://edenparfum-backend-xyz.railway.app/api/:splat"
  status = 200

STEP 4: Update CORS in Backend
────────────────────────────────────────────────────────────────────────────────
Add your Netlify domain to backend/server.js CORS configuration:

const allowedOrigins = [
    'http://localhost:3000',
    'http://localhost:8080',
    'https://your-netlify-site.netlify.app',  // Add this line
    'https://your-custom-domain.com'          // If you have one
];

STEP 5: Test Your Deployment
────────────────────────────────────────────────────────────────────────────────
1. Deploy to Netlify
2. Visit your site URL
3. Check if catalog loads all 506 perfumes
4. Test search and filtering functionality

================================================================================
🎯 ALTERNATIVE SOLUTION: Netlify Functions
================================================================================

If you prefer serverless, convert your Express routes to Netlify Functions:

STEP 1: Create netlify/functions directory
STEP 2: Convert each route to a separate function file
STEP 3: Update netlify.toml to use functions

Example function structure:
netlify/
└── functions/
    ├── perfumes.js
    ├── brands.js
    └── health.js

================================================================================
⚡ QUICK FIX: Offline-Only Mode
================================================================================

For immediate deployment without backend:

1. Comment out API redirects in netlify.toml (already done)
2. The site will automatically use offline data (20 sample perfumes)
3. Users will see "Running in offline mode" warning

This gives you a working site immediately while you set up proper backend.

================================================================================
🔍 VERIFICATION CHECKLIST
================================================================================

After deployment, verify:
□ Netlify site loads without errors
□ Catalog shows 506 perfumes (not 20 offline samples)
□ Search functionality works
□ No console errors in browser
□ API calls succeed (check Network tab)
□ Images load properly
□ Mobile responsive design works

================================================================================
💡 PRO TIPS
================================================================================

1. Test in staging first using Netlify branch deploys
2. Set up monitoring (UptimeRobot) for your backend
3. Enable Netlify Analytics for traffic insights
4. Consider using a custom domain for professional appearance
5. Set up environment variables in Netlify for sensitive data

================================================================================
🆘 TROUBLESHOOTING
================================================================================

Common Issues:
• CORS errors: Update backend CORS configuration
• 404 on API calls: Check redirect URL format
• Environment variables: Verify they're set in Railway/Netlify
• Database connection: Test Supabase credentials

Need help? Check the browser console and network tab for specific error messages.

================================================================================
DEPLOYMENT STATUS: Ready to Deploy ✅
ESTIMATED TIME: 30 minutes
DIFFICULTY: Beginner-Friendly
================================================================================